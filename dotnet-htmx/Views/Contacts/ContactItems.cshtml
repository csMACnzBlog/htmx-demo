@model ContactsViewModel
@foreach (var x in Model.Contacts)
{
    <tr>
      <th scope="row">@x.Id</th>
      <td>@x.FirstName</td>
      <td>@x.LastName</td>
      <td>
        <a href="@Url.Action("ViewContact", new { Id = @x.Id })">View</a>
        <a href="@Url.Action("EditContact", new { Id = @x.Id })">Edit</a>
      </td>
    </tr>
}
@if (Model.NextPage is not null)
{
    <tr id="nextPage"
        hx-get="@Url.Action("List", "Contacts", new { q = Model.Query, page = Model.NextPage })"
        hx-trigger="revealed"
        hx-swap="outerHTML"
        hx-indicator="#nextPageSpinner">
        <td colspan="4" style="text-align: center;">
            <progress id="nextPageSpinner" class="htmx-indicator"></progress>
            <noscript>
                @if (Model.PreviousPage is not null)
                {
                    <a href="@Url.Action("List", "Contacts", new { q = Model.Query, page = Model.PreviousPage })">Previous</a>
                }
                <a href="@Url.Action("List", "Contacts", new { q = Model.Query, page = Model.NextPage })">Next</a>
            <noscript>
        </td>
    </tr>
}
else if (Model.PreviousPage is not null)
{
    <tr>
        <td colspan="4" style="text-align: center;">
            <noscript>
                <a href="@Url.Action("List", "Contacts", new { q = Model.Query, page = Model.PreviousPage })">Previous</a>
            <noscript>
        </td>
    </tr>
}

@if (Model.NextPage == 1 && Model.OutofBandSwap)
{
<td id="resultCountB" hx-swap-oob="true">
    <partial name="ContactCount.cshtml" model="@Model.ContactResultCount" />
</td>
}